---
// Giscus 评论组件
// 支持动态主题切换
import { giscusConfig } from "../config";

interface Props {
    class?: string;
}

const {
    class: className = ""
} = Astro.props;

// 如果 Giscus 未启用，不渲染组件
if (!giscusConfig.enable) {
    return null;
}

const { repo, repoId, category, categoryId, mapping, lang } = giscusConfig;
---

<!-- Giscus 评论组件容器 -->
<div id="giscus-container" class:list={["mt-6", className]}></div>

<!-- 动态主题切换的 Giscus 脚本 -->
<script is:inline define:vars={{ repo, repoId, category, categoryId, mapping, lang }}>
    // 定义一个状态变量 giscusTheme，用于存储 Giscus 的主题
    let giscusTheme = '';
    
    // 初始化 Giscus 的函数
    function initGiscus() {
        // 在客户端获取主题并设置 Giscus 的 theme 属性
        const savedTheme = localStorage.getItem('theme');
        // 如果主题为 dark，则设置 Giscus 的 theme 属性为 dark_dimmed
        // 如果主题为 light，则设置 Giscus 的 theme 属性为 light_high_contrast
        // 否则，设置 Giscus 的 theme 属性为 preferred_color_scheme
        /*
        Giscus 支持的主题（黑色/白色）包括：
        - light
        - light_high_contrast
        - light_protanopia
        - light_tritanopia
        - dark
        - dark_dimmed
        - dark_high_contrast
        - dark_protanopia
        - dark_tritanopia
        - preferred_color_scheme
        */
        giscusTheme = savedTheme === 'dark'
            ? 'dark'
            : savedTheme === 'light'
            ? 'light'
            : 'preferred_color_scheme';
        
        // 清除现有的 Giscus 容器内容
        const container = document.getElementById('giscus-container');
        if (container) {
            container.innerHTML = '';
        }
        
        // 创建 Giscus 脚本标签
        const script = document.createElement('script');
        script.src = 'https://giscus.app/client.js';
        script.setAttribute('data-repo', repo);
        script.setAttribute('data-repo-id', repoId);
        script.setAttribute('data-category', category);
        script.setAttribute('data-category-id', categoryId);
        script.setAttribute('data-mapping', mapping);
        script.setAttribute('data-strict', '0');
        script.setAttribute('data-reactions-enabled', '1');
        script.setAttribute('data-emit-metadata', '0');
        script.setAttribute('data-input-position', 'top');
        script.setAttribute('data-theme', giscusTheme);
        script.setAttribute('data-lang', lang);
        script.setAttribute('data-loading', 'lazy');
        script.setAttribute('crossorigin', 'anonymous');
        script.async = true;
        
        // 将脚本添加到容器中
        if (container) {
            container.appendChild(script);
        }
    }
    
    // 监听主题变化事件
    function updateGiscusTheme() {
        const savedTheme = localStorage.getItem('theme');
        const newTheme = savedTheme === 'dark' ? 'dark_dimmed' : savedTheme === 'light' ? 'light_high_contrast' : 'preferred_color_scheme';
        
        if (newTheme !== giscusTheme) {
            giscusTheme = newTheme;
            // 重新初始化 Giscus 以应用新主题
            initGiscus();
        }
    }
    
    // 在页面加载完成后初始化 Giscus
    document.addEventListener('DOMContentLoaded', function() {
        initGiscus();
        
        // 监听主题切换事件（如果您的网站有主题切换功能）
        document.addEventListener('themeChanged', updateGiscusTheme);
        
        // 监听 localStorage 变化（适用于多标签页同步）
        window.addEventListener('storage', function(e) {
            if (e.key === 'theme') {
                updateGiscusTheme();
            }
        });
    });
</script>
